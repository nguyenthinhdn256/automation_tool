import tkinter as tk
from tkinter import ttk

def create_basic_excel_table():
    root = tk.Tk()
    root.title("üìä B·∫£ng Excel - Vi·ªÅn ƒëen r√µ r√†ng")
    root.geometry("800x500")
    root.configure(bg='#f0f0f0')
    
    # Title
    title_label = tk.Label(root, text="B·∫¢NG ƒêI·ªÇM SINH VI√äN", 
                          font=('Arial', 16, 'bold'), 
                          bg='#f0f0f0', fg='#2c3e50')
    title_label.pack(pady=20)
    
    # Frame cho b·∫£ng
    frame = tk.Frame(root, bg='white', relief='solid', bd=2)
    frame.pack(padx=20, pady=10, fill='both', expand=True)
    
    # Treeview v·ªõi vi·ªÅn ƒëen r√µ r√†ng
    style = ttk.Style()
    style.theme_use('clam')
    
    # C·∫•u h√¨nh style v·ªõi vi·ªÅn ƒëen
    style.configure("Bordered.Treeview", 
                   background="white",
                   foreground="black",
                   rowheight=30,
                   fieldbackground="white",
                   font=('Arial', 10),
                   borderwidth=1,
                   relief="solid")
    
    style.configure("Bordered.Treeview.Heading", 
                   background="#E7E6E6",
                   foreground="black",
                   font=('Arial', 11, 'bold'),
                   borderwidth=1,
                   relief="solid")
    
    # Map ƒë·ªÉ th√™m vi·ªÅn khi selected
    style.map("Bordered.Treeview",
             background=[('selected', '#B3D9FF')],
             relief=[('selected', 'solid')],
             borderwidth=[('selected', 1)])
    
    # T·∫°o Treeview
    columns = ('M√£ SV', 'H·ªç t√™n', 'Ng√†nh h·ªçc', 'ƒêi·ªÉm', 'X·∫øp lo·∫°i')
    tree = ttk.Treeview(frame, columns=columns, show='headings', style="Bordered.Treeview")
    
    # ƒê·ªãnh nghƒ©a headers v·ªõi vi·ªÅn
    for col in columns:
        tree.heading(col, text=col, anchor='center')
        tree.column(col, width=150, anchor='center', 
                   minwidth=100)  # ƒê·∫£m b·∫£o c√≥ ƒë·ªô r·ªông t·ªëi thi·ªÉu
    
    # D·ªØ li·ªáu
    data = [
        ('SV001', 'Nguy·ªÖn VƒÉn An', 'Tin h·ªçc', '85', 'Gi·ªèi'),
        ('SV002', 'Tr·∫ßn Th·ªã B√¨nh', 'To√°n h·ªçc', '92', 'Xu·∫•t s·∫Øc'),
        ('SV003', 'L√™ VƒÉn C∆∞·ªùng', 'V·∫≠t l√Ω', '78', 'Kh√°'),
        ('SV004', 'Ph·∫°m Th·ªã Dung', 'H√≥a h·ªçc', '88', 'Gi·ªèi'),
        ('SV005', 'Ho√†ng VƒÉn Em', 'Sinh h·ªçc', '95', 'Xu·∫•t s·∫Øc'),
        ('SV006', 'Nguy·ªÖn Th·ªã Lan', 'Anh vƒÉn', '83', 'Gi·ªèi'),
        ('SV007', 'Tr·∫ßn VƒÉn Nam', 'L·ªãch s·ª≠', '76', 'Kh√°'),
        ('SV008', 'L√™ Th·ªã Hoa', 'ƒê·ªãa l√Ω', '90', 'Xu·∫•t s·∫Øc')
    ]
    
    # Th√™m d·ªØ li·ªáu v√†o b·∫£ng v·ªõi vi·ªÅn
    for i, row in enumerate(data):
        tree.insert('', 'end', values=row)
    
    # CSS-like configuration cho vi·ªÅn r√µ r√†ng
    tree.configure(selectmode='browse')
    
    # Scrollbar
    scrollbar = ttk.Scrollbar(frame, orient='vertical', command=tree.yview)
    tree.configure(yscrollcommand=scrollbar.set)
    scrollbar.pack(side='right', fill='y')
    tree.pack(side='left', fill='both', expand=True)
    
    # Th√™m vi·ªÅn b·∫±ng c√°ch s·ª≠ d·ª•ng Frame wrapper
    border_frame = tk.Frame(tree, bg='black')
    border_frame.place(x=0, y=0, relwidth=1, relheight=1)
    
    # Footer
    footer_label = tk.Label(root, text="‚úÖ T·ªïng c·ªông: 8 sinh vi√™n", 
                           font=('Arial', 10), bg='#f0f0f0', fg='#666')
    footer_label.pack(pady=10)
    
    # Th√™m CSS ƒë·ªÉ t·∫°o vi·ªÅn grid
    def add_grid_lines():
        # T·∫°o hi·ªáu ·ª©ng vi·ªÅn grid b·∫±ng c√°ch v·∫Ω lines
        canvas = tk.Canvas(tree, highlightthickness=0)
        canvas.place(x=0, y=0, relwidth=1, relheight=1)
        
        # V·∫Ω c√°c ƒë∆∞·ªùng k·∫ª d·ªçc
        col_widths = [150, 150, 150, 150, 150]  # ƒê·ªô r·ªông c√°c c·ªôt
        x_pos = 0
        for width in col_widths[:-1]:  # Kh√¥ng v·∫Ω ƒë∆∞·ªùng cu·ªëi
            x_pos += width
            canvas.create_line(x_pos, 0, x_pos, 1000, fill='black', width=1)
        
        # V·∫Ω c√°c ƒë∆∞·ªùng k·∫ª ngang
        for i in range(len(data) + 2):  # +2 cho header v√† buffer
            y_pos = i * 30
            canvas.create_line(0, y_pos, 1000, y_pos, fill='black', width=1)
    
    # G·ªçi sau khi widget ƒë∆∞·ª£c render
    root.after(100, add_grid_lines)
    
    root.mainloop()

if __name__ == "__main__":
    create_basic_excel_table()